% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/everything.R
\name{get_everything}
\alias{get_everything}
\title{Get all articles}
\usage{
get_everything(
  keyword = NULL,
  title_keyword = NULL,
  sources = NULL,
  domains = NULL,
  exclude_domains = NULL,
  from = NULL,
  to = NULL,
  language = NULL,
  sort_by = "published at",
  page_size = NULL,
  page = NULL
)
}
\arguments{
\item{keyword}{(Optional) A string. Keyword(s) based on
which to search for articles, such as "Hong Kong protests" or "Amazon forest".
Keywords may appear either in the title or the body of the article. Advanced
search is supported here - surround phrases with quotes (") for exact match,
prepend words or phrases that must appear with a + symbol (e.g. +bitcoin),
prepend words that must not appear with a - symbol (e.g. -bitcoin).
Alternatively, you can use the AND / OR / NOT keywords, and optionally
group these with parenthesis. Eg: "crypto AND (ethereum OR litecoin) NOT bitcoin".}

\item{title_keyword}{(Optional) A string or character vector. Keywords or phrases
to search for in the article title only. Advanced search is supported here
(see parameter "keyword") for details.}

\item{sources}{(Optional) A character vector. The news sources or blogs you want top
headlines from. See the get_sources() function for how to obtain a full list
of the available sources.}

\item{domains}{(Optional) A character vector. The set of domains (eg bbc.co.uk,
techcrunch.com, engadget.com) to restrict the search to.}

\item{exclude_domains}{(Optional) A character vector. The set of domains
(eg bbc.co.uk, techcrunch.com, engadget.com) to remove from the results.}

\item{from}{(Optional) A string. A date and optional time for the oldest
article allowed. This should be in ISO 8601 format (e.g. "2019-11-25" or
"2019-11-25T23:45:05"). Default: the oldest according to your plan.}

\item{to}{(Optional) A string. A date and optional time for the newest
article allowed. This should be in ISO 8601 format (e.g. "2019-11-25" or
"2019-11-25T23:45:05"). Default: the newest according to your plan.}

\item{language}{(Optional) A string. Find sources that display news in a s
pecific language. Possible options are: Arabic, German, English, Spanish,
French, Hebrew, Italian, Dutch, Norwegian, Portuguese, Russian, Swedish,
Urdu, and Chinese. The language can also be specified using ISO codes,
e.g. "DE" for German or "ES" for Spanish. By default, the API returns
sources in all languages.}

\item{sort_by}{(Optional) A string. The order to sort the articles in.
Possible options: "relevancy", "popularity", "published at". Defaults to
"published at".}

\item{page_size}{(Optional) An integer. The number of results to return per request.
The API's default is 20, and the maximum is 100.}

\item{page}{(Optional) An integer. Use this to page through the results if the total
results found is greater than the page size.}
}
\value{
A tibble of article information, with source, author, title,
description, URL, publication date, and a short preview of the content.
}
\description{
Search through millions of articles from over 30,000 large and small news
sources and blogs. This includes breaking news as well as lesser articles.
At least one parameter from among keyword, title_keyword, sources, and
domains must be specified, otherwise the search is too broad.
}
